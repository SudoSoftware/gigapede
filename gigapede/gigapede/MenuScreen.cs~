using System;
using System.Collections.Generic;
using System.linq;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Audio;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.GamerServices;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Media;

namespace gigapede
{
    class MenuScreen : Screen
    {
	private String head_text;

        private MenuStyle style;

	private List<MenuItem> menu_items;

	public MenuScreen (String head_text, MenuStyle style)
	{
	    this.head_text = head_text;
	    this.style = style;
	}

	public ChangeStyle (MenuStyle style)
	{
	    this.style = style;
	}

	public AddItem (MenuItem new_item, int position = menu_items.size)
	{
	    menu_items.Insert(new_item, position);
	}

	public KillItem (MenuItem dead_item)
	{
	    menu_items.Remove(dead_item)
	}

	public SetItemActive (MenuItem item, bool active)
	{
	    if (menu_items.Contains(item))
                item.SetActive(active);
	}

	public override HandleInput (GameTime time, InputBundle input)
	{
	    // Based on input, move the highlighted item across the screen.
	    // If the input is not used here, pass it to the item.
	    
	    for (MenuItem x in menu_items)
	        x.HandleInput(time, input)
	}

	public override Draw ()
	{
	    SpriteBatch sb = manager.RM.SpriteB;
	    FontTexture head_font = style.head_font;


	    Vector2 postion = new Vector2(style.headpos.X, style.headpos.Y);
	    sb.DrawText(head_text, head_font, position);

	    postion = new Vector2(style.startpos.X, style.startpos.Y);

	    for (MenuItem x in menu_items)
	    {
	        x.Draw(manager, style, position);
		position.X += style.startpos.X;
		position.Y += style.startpos.Y;
	    }
	}

    }
}
