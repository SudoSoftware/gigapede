using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Audio;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.GamerServices;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Media;

namespace gigapede
{
    /*
     * This class is a top level class managing screen display and resource management.
     * */
    class ScreenManager
    {
	// Screen with input focus.
	Screen focus;

	// Queue of Screens.
	List<Screen> screenqueue;

        // The resource manager.
        ResourceManager rm;

        // The resource manager's accessor.
        public ResourceManager RM
        {
            get { return rm; }
        }

        // Constructor
        public ScreenManager(GraphicsDeviceManager graphics, ContentManager content, SpriteBatch spriteb)
        {
            rm = new ResourceManager(graphics, content, spriteb);
        }

	public AddScreen (Screen new_screen)
	{
	    screenqueue.AddScreen(new_screen)
	}

	public KillScreen (Screen dead_screen)
	{
	    screenqueue.Remove(dead_screen);
	}

	public FocusScreen (Screen focus_screen)
	{
	    focus = focus_screen
	}

	public Update (GameTime time)
	{
	    for (Screen x in screenqueue)
	        x.Update (time)

	    focus.HandleInput(time, input);
	}

	public Draw ()
	{
	    for (Screen x in screenqueue)
	        if (! x.hiddenp) x.Draw();
	}
    }
}
